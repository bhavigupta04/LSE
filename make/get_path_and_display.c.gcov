        -:    0:Source:../src/get_path_and_display.c
        -:    0:Graph:get_path_and_display.gcno
        -:    0:Data:get_path_and_display.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:/*********************************************************************************
        -:    2:*	FileName : get_path_and_display.c
        -:    3:*
        -:    4:*	Description : This file contains the functions to get absolute path and 
        -:    5:*			display it's content.
        -:    6:*
        -:    7:*	Date:		Name:		Reference:		Reason:
        -:    8:*	30/04/18	GR_TH5_C_5	Local Search Engine	Nalanda Project
        -:    9:*
        -:   10:*	Copyright @2018, Aricent Tech. Holdings Ltd.
        -:   11:*
        -:   12:**********************************************************************************/
        -:   13:
        -:   14:/******************************************************************************
        -:   15:*
        -:   16:*				USER DEFINED HEADER 
        -:   17:*
        -:   18:******************************************************************************/
        -:   19:
        -:   20:#include <search_util.h>
        -:   21:
        -:   22:/******************************************************************************
        -:   23:*
        -:   24:*	FUNCTION NAME : get_absolute_path()
        -:   25:*
        -:   26:*	DESCRIPTION : This is for taking absolute path from the user.
        -:   27:*
        -:   28:*	ARGUMENTS : file_path - searching directory.
        -:   29:*
        -:   30:*	RETURNS : SUCCESS
        -:   31:*
        -:   32:******************************************************************************/
        -:   33:
        1:   34:void get_absolute_path(char *file_path)
        -:   35:{
        1:   36:	logging_report("ENTERING: get_absolute_path()");
        1:   37:	printf("\n\tEnter the absolute path of the file : ");
        1:   38:       scanf("%s", file_path);
        1:   39:	logging_report("EXITING: get_absolute_path()");
        1:   40:}
        -:   41:
        -:   42:/******************************************************************************
        -:   43:*
        -:   44:*	FUNCTION NAME : display_content()
        -:   45:*
        -:   46:*	DESCRIPTION : This function displays the content of the file.
        -:   47:*
        -:   48:*	ARGUMENTS : No arguments.
        -:   49:*
        -:   50:*	RETURNS : SUCCESS
        -:   51:*
        -:   52:******************************************************************************/
        -:   53:
        1:   54:int display_content()
        -:   55:{
        1:   56:	char file_path[MAX_SIZE] = {'\0'};		/* variable for storing path of searching directory */
        1:   57:	char cmd_string[MAX_SIZE] = {'\0'};	/* variable for building a command */
        -:   58:
        1:   59:	logging_report("ENTERING: display_content()");
        -:   60:	/*
        -:   61:	* Function call for taking absolute path from user.
        -:   62:	*/
        1:   63:	get_absolute_path(file_path);
        -:   64:
        -:   65:	/* copying 'cat' command into buffer */
        1:   66:	strcpy(cmd_string, "cat ");
        -:   67:
        -:   68:	/* concatenating file path into buffer */
        1:   69:	strcat(cmd_string, file_path);
        -:   70:
        1:   71:	printf("\n******************** FILE DATA BEGIN ***************************\n\n");
        -:   72:
        1:   73:	system(cmd_string);	/* system call to display the content */
        -:   74:
        1:   75:	printf("\n\n*********************** FILE DATA END *************************************\n");
        -:   76:	
        1:   77:	logging_report("EXITING: display_content()");
        1:   78:	return SUCCESS;
        -:   79:}

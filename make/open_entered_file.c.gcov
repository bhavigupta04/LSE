        -:    0:Source:../src/open_entered_file.c
        -:    0:Graph:open_entered_file.gcno
        -:    0:Data:open_entered_file.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:/*********************************************************************************
        -:    2:*	FileName : open_entered_file.c
        -:    3:*
        -:    4:*	Description : This file contains the function to display the content of user
        -:    5:*			entered file.
        -:    6:*
        -:    7:*	Date:		Name:		Reference:		Reason:
        -:    8:*	30/04/18	GR_TH5_C_5	Local Search Engine	Nalanda Project
        -:    9:*
        -:   10:*	Copyright @2018, Aricent Tech. Holdings Ltd.
        -:   11:*
        -:   12:**********************************************************************************/
        -:   13:
        -:   14:/******************************************************************************
        -:   15:*
        -:   16:*				USER DEFINED HEADER 
        -:   17:*
        -:   18:******************************************************************************/
        -:   19:
        -:   20:#include <search_util.h>
        -:   21:
        -:   22:
        -:   23:/******************************************************************************
        -:   24:*
        -:   25:*	FUNCTION NAME : open_user_entered_file()
        -:   26:*
        -:   27:*	DESCRIPTION : This function let the user choose a file from the list and
        -:   28:*			display the content.
        -:   29:*
        -:   30:*	ARGUMENTS : No arguments.
        -:   31:*
        -:   32:*	RETURNS : SUCCESS
        -:   33:*
        -:   34:******************************************************************************/
        -:   35:
        -:   36:
        1:   37:int open_user_entered_file()
        -:   38:{
        1:   39:	FILE *fp = NULL;
        -:   40:	
        1:   41:	char buffer[MAX_SIZE] = {'\0'};		/* buffer to store data from file */
        1:   42:	char file_name[MAX_SIZE] = {'\0'};		/* variable for file name */ 
        1:   43:	char cmd_string[MAX_SIZE] = {'\0'};	/* buffer to store command */
        -:   44:
        1:   45:	logging_report("ENTERING: open_user_entered_file()");
        1:   46:	printf("\nPlease enter the file name to open: ");
        1:   47:	scanf("%s",file_name);
        -:   48:	
        -:   49:	/* opening the file containing the path of the listed files */
        1:   50:	fp = fopen("/user/gur51070/project_practice_1.0/LSE_1.1_updated/data/output.txt", "r");
        1:   51:	if(fp == NULL)
        -:   52:	{
    #####:   53:		printf("FILE NOT OPENED\n");
    #####:   54:		return FAILURE;
        -:   55:	}
        -:   56:	/* 
        -:   57:	* Reading the content of the file into the buffer.
        -:   58:	* File consists path of all files containing that string/pattern. 
        -:   59:	*/
       11:   60:	while(fscanf(fp, "%[^\n]\n", buffer) != EOF)
        -:   61:	{
        -:   62:		/*
        -:   63:		* searching file name in the buffer.
        -:   64:		*/
        9:   65:		if(strstr(buffer, file_name) != NULL)
        -:   66:		{
        3:   67:			printf("\nFILE PATH : %s\n", buffer);
        3:   68:			printf("\n##**************** FILE CONTENT ****************##\n\n");
        -:   69:
        -:   70:			/* copying 'cat' command into buffer */
        3:   71:			strcpy(cmd_string, "cat ");	
        -:   72:
        -:   73:			/* concatenating buffer into the command */
        3:   74:			strcat(cmd_string, buffer);
        -:   75:		
        -:   76:			/* system call to display the content */
        3:   77:			system(cmd_string);
        -:   78:
        3:   79:			printf("\n##**************** FILE END ****************##\n");
        -:   80:		}
        -:   81:	}
        1:   82:	logging_report("EXITING: open_user_entered_file()");
        1:   83:	return SUCCESS;	
        -:   84:}
        -:   85:
